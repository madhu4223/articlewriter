{"version":3,"sources":["webpack:///src/app/services/auth/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/login/login.component.ts","webpack:///src/app/modules/login/login.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AuthService","router","token","localStorage","getItem","navigate","environment","production","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","exports","LoginComponent","username","password","isLoggedIn","console","log","tokenStr","JSON","stringify","setItem","onSubmit","routes","path","loadChildren","then","module","DashboardModule","pathMatch","canActivate","component","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthService implements CanActivate {\n    constructor(public router: Router){}\n\n    canActivate(): boolean{\n        let token = localStorage.getItem('auth-token')\n        if(!token){\n            this.router.navigate(['login'])\n            return false\n        }\n        return true;\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Trackify';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { AuthService } from './services/auth/auth.service'\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n// import { Gpt3Component } from './modules/components/gpt3/gpt3.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    // Gpt3Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n    ],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n  exports: [HttpClientModule]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{ Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n  username: string = ''\n  password: string = ''\n\n  ngOnInit(): void {\n    if(this.isLoggedIn()){\n      this.router.navigate(['dashboard'])\n    }\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('auth-token')\n  }\n\n  onSubmit(){\n    console.log(this.username, this.password)\n    if(this.username && this.password){\n      if(this.username == 'madhu' && this.password =='madhu'){\n        let token = {\n          username: this.username, password: this.password\n        }\n        let tokenStr: string = JSON.stringify(token)\n        localStorage.setItem('auth-token',tokenStr)\n        this.router.navigate(['dashboard'])\n      }\n    }\n    \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"usernmae\" [(ngModel)]=\"username\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <div class=\"row\">\n        <button type=\"submit\" (click)=\"onSubmit()\"> Log In</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './modules/login/login.component';\nimport { AuthService } from './services/auth/auth.service'\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./modules/dashboard/dashboard.module').then((module) =>module.DashboardModule),\n    pathMatch:'full',\n    canActivate: [AuthService]\n\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}