{"version":3,"sources":["./src/app/services/auth/auth.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/login/login.component.ts","./src/app/modules/login/login.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthService implements CanActivate {\n    constructor(public router: Router){}\n\n    canActivate(): boolean{\n        let token = localStorage.getItem('auth-token')\n        if(!token){\n            this.router.navigate(['login'])\n            return false\n        }\n        return true;\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Trackify';\n}\n","\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './modules/login/login.component';\nimport { AuthService } from './services/auth/auth.service'\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n// import { Gpt3Component } from './modules/components/gpt3/gpt3.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    // Gpt3Component\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n    ],\n  providers: [AuthService],\n  bootstrap: [AppComponent],\n  exports: [HttpClientModule]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport{ Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private router: Router\n  ) { }\n  username: string = ''\n  password: string = ''\n\n  ngOnInit(): void {\n    if(this.isLoggedIn()){\n      this.router.navigate(['dashboard'])\n    }\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('auth-token')\n  }\n\n  onSubmit(){\n    console.log(this.username, this.password)\n    if(this.username && this.password){\n      if(this.username == 'madhu' && this.password =='madhu'){\n        let token = {\n          username: this.username, password: this.password\n        }\n        let tokenStr: string = JSON.stringify(token)\n        localStorage.setItem('auth-token',tokenStr)\n        this.router.navigate(['dashboard'])\n      }\n    }\n    \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"usernmae\" [(ngModel)]=\"username\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <div class=\"row\">\n        <button type=\"submit\" (click)=\"onSubmit()\"> Log In</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './modules/login/login.component';\nimport { AuthService } from './services/auth/auth.service'\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./modules/dashboard/dashboard.module').then((module) =>module.DashboardModule),\n    pathMatch:'full',\n    canActivate: [AuthService]\n\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}